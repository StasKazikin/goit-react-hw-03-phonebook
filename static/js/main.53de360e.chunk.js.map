{"version":3,"sources":["components/Filter/Filter.module.scss","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","index.js","components/ContactForm/ContactForm.module.scss","components/ContactList/ContactList.module.scss"],"names":["module","exports","ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","contactId","handleInput","event","currentTarget","value","setState","reset","handleSubmit","preventDefault","props","onSubmit","id","this","className","form","label","htmlFor","input","type","onChange","button","Component","Filter","filter","ContactList","contacts","onClick","list","map","item","App","INITIAL_STATE","addContact","newContact","find","toLowerCase","alert","deleteContact","target","changeFilter","filterContacts","normalizedFilter","includes","parsedContacts","JSON","parse","localStorage","getItem","prevProps","prevState","setItem","stringify","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53de360e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3uY5N\",\"input\":\"Filter_input__6vTqw\"};","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport shortid from \"shortid\";\r\nimport { form, label, input, button } from \"./ContactForm.module.scss\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n  contactId = shortid.generate();\r\n\r\n  handleInput = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    const { name, number } = this.state;\r\n\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit({ id: this.contactId, name, number });\r\n\r\n    this.reset();\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form className={form} onSubmit={this.handleSubmit}>\r\n        <label className={label} htmlFor={this.nameInputId}>\r\n          Name\r\n          <input\r\n            className={input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleInput}\r\n            id={this.nameInputId}\r\n          ></input>\r\n        </label>\r\n        <label className={label} htmlFor={this.numberInputId}>\r\n          Number\r\n          <input\r\n            className={input}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleInput}\r\n            id={this.numberInputId}\r\n          ></input>\r\n        </label>\r\n        <button className={button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { label, input } from \"./Filter.module.scss\";\r\n\r\nclass Filter extends Component {\r\n  render() {\r\n    const { filter, onChange } = this.props;\r\n\r\n    return (\r\n      <label className={label}>\r\n        Find contacts by name\r\n        <input\r\n          className={input}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={onChange}\r\n        ></input>\r\n      </label>\r\n    );\r\n  }\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { list, item, button } from \"./ContactList.module.scss\";\r\n\r\nclass ContactList extends Component {\r\n  render() {\r\n    const { contacts, onClick } = this.props;\r\n\r\n    return (\r\n      <ul className={list}>\r\n        {contacts.map(({ name, number, id }) => (\r\n          <li className={item} key={id}>\r\n            <span>\r\n              {name}: {number}\r\n            </span>\r\n            <button className={button} id={id} type=\"button\" onClick={onClick}>\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\nimport INITIAL_STATE from \"./initial_state.json\";\n\nclass App extends Component {\n  state = {\n    contacts: [...INITIAL_STATE],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    // const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = (newContact) => {\n    const { contacts } = this.state;\n    const sameContact = contacts.find(\n      ({ name }) => name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    if (sameContact) {\n      alert(`${newContact.name} is already in contacts`);\n      return;\n    }\n    this.setState(({ contacts }) => {\n      return { contacts: [...contacts, newContact] };\n    });\n  };\n\n  deleteContact = (event) => {\n    this.setState(({ contacts }) => {\n      return {\n        contacts: contacts.filter(({ id }) => id !== event.target.id),\n      };\n    });\n  };\n\n  changeFilter = (event) => {\n    this.setState({\n      filter: event.currentTarget.value,\n    });\n  };\n\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const filteredContacts = this.filterContacts();\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter filter={this.state.filter} onChange={this.changeFilter} />\n        <ContactList contacts={filteredContacts} onClick={this.deleteContact} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2UdfM\",\"label\":\"ContactForm_label__SMQA_\",\"input\":\"ContactForm_input__2fPGm\",\"button\":\"ContactForm_button__FN8cp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1VlFi\",\"item\":\"ContactList_item__2Ivcz\",\"button\":\"ContactList_button__2PHdt\"};"],"sourceRoot":""}